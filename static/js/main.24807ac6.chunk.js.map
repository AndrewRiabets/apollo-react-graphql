{"version":3,"sources":["apollo.js","routes/Details.js","components/Movie.js","routes/Home.js","components/App.js","index.js"],"names":["client","ApolloClient","uri","cache","InMemoryCache","resolvers","Movie","isLiked","Mutation","toggleLikeMovie","_","id","modify","fields","GET_MOVIE","gql","Container","styled","div","Column","Poster","props","bg","Title","h1","Subtitle","h4","Description","p","useParams","useQuery","variables","loading","data","movie","title","language","rating","description_intro","medium_cover_image","LIKE_MOVIE","useMutation","parseInt","toogleLikeMovie","to","onClick","GET_MOVIES","Header","header","h3","Loading","Movies","movies","map","m","App","exact","path","component","Home","Details","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.24807ac6.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache } from \"@apollo/client\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"https://easycoders-movies.herokuapp.com/\",\r\n  cache: new InMemoryCache(),\r\n  resolvers: {\r\n    Movie: {\r\n      isLiked: () => false,\r\n    },\r\n    Mutation: {\r\n      toggleLikeMovie: (_, { id, isLiked }, { cache }) => {\r\n        cache.modify({\r\n          id: `Movie:${id}`,\r\n          fields: {\r\n            isLiked: (isLiked) => !isLiked,\r\n          },\r\n        });\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default client;","import { useParams } from \"react-router-dom\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport styled from \"styled-components\";\r\n\r\nconst GET_MOVIE = gql`\r\n  query getMovie($id: Int!) {\r\n    movie(id: $id) {\r\n      id\r\n      title\r\n      medium_cover_image\r\n      description_intro\r\n      rating\r\n      language\r\n      isLiked @client\r\n    }\r\n    suggestions(id: $id) {\r\n      id\r\n      medium_cover_image\r\n    }\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  color: white;\r\n`;\r\n\r\nconst Column = styled.div`\r\n  margin-left: 10px;\r\n  width: 50%;\r\n`;\r\n\r\nconst Poster = styled.div`\r\n  background-image: url(${(props) => props.bg});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  width: 25%;\r\n  height: 60%;\r\n  background-color: transparent;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 65px;\r\n  margin-bottom: 15px;\r\n`;\r\nconst Subtitle = styled.h4`\r\n  font-size: 35px;\r\n  margin-bottom: 10px;\r\n`;\r\nconst Description = styled.p`\r\n  font-size: 28px;\r\n`;\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () => {\r\n  const { id } = useParams();\r\n  const { loading, data } = useQuery(GET_MOVIE, {\r\n    variables: { id },\r\n  });\r\n  return (\r\n    <Container>\r\n      <Column>\r\n        <Title>\r\n          {loading\r\n            ? \"–ó–∞–≥—Ä—É–∑–∫–∞...\"\r\n            : `${data?.movie?.title} ${data?.movie?.isLiked ? \"‚ù§Ô∏è\" : \"üò•\"} `}\r\n        </Title>\r\n        <Subtitle>\r\n          {data?.movie?.language} ¬∑ {data?.movie?.rating}\r\n        </Subtitle>\r\n        <Description>{data?.movie?.description_intro}</Description>\r\n      </Column>\r\n      <Poster bg={data?.movie?.medium_cover_image}></Poster>\r\n    </Container>\r\n  );\r\n};","import { useMutation, gql } from \"@apollo/client\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LIKE_MOVIE = gql`\r\n  mutation toggleLikeMovie($id: Int!, $isLiked: Boolean!) {\r\n    toggleLikeMovie(id: $id, isLiked: $isLiked) @client\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  height: 380px;\r\n  width: 100%;\r\n  border-radius: 7px;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n`;\r\nconst Poster = styled.div`\r\n  background-image: url(${(props) => props.bg});\r\n  height: 100%;\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-position: center center;\r\n`;\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default ({ id, bg, isLiked }) => {\r\n  const [toogleLikeMovie] = useMutation(LIKE_MOVIE, {\r\n    variables: { id: parseInt(id), isLiked },\r\n  });\r\n  return (\r\n    <Container>\r\n      <Link to={`/${id}`}>\r\n        <Poster bg={bg} />\r\n      </Link>\r\n      <button onClick={toogleLikeMovie}>\r\n        {isLiked ? \"–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è\" : \"–ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å\"}\r\n      </button>\r\n    </Container>\r\n  );\r\n};","import { gql, useQuery } from \"@apollo/client\";\r\nimport styled from \"styled-components\";\r\nimport Movie from \"../components/Movie\";\r\n\r\nconst GET_MOVIES = gql`\r\n  query {\r\n    movies {\r\n      id\r\n      medium_cover_image\r\n      isLiked @client\r\n    }\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\r\n  height: 45vh;\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 60px;\r\n  font-weight: 600;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Subtitle = styled.h3`\r\n  font-size: 35px;\r\n`;\r\n\r\nconst Loading = styled.div`\r\n  font-size: 18px;\r\n  opacity: 0.5;\r\n  font-weight: 500;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst Movies = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-gap: 25px;\r\n  width: 60%;\r\n  position: relative;\r\n  top: -20px;\r\n`;\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () => {\r\n  const { loading, data } = useQuery(GET_MOVIES);\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Title>Andrew Riabts</Title>\r\n        <Subtitle>–ë–∞–∑–∞ —Ñ–∏–ª—å–º–æ–≤ –Ω–∞ React, Apollo, GraphQL</Subtitle>\r\n      </Header>\r\n      {loading && <Loading>–ó–∞–≥—Ä—É–∑–∫–∞...</Loading>}\r\n      {!loading && data?.movies && (\r\n        <Movies>\r\n          {data.movies.map((m) => (\r\n            <Movie\r\n              key={m.id}\r\n              id={m.id}\r\n              bg={m.medium_cover_image}\r\n              isLiked={m.isLiked}\r\n            />\r\n          ))}\r\n        </Movies>\r\n      )}\r\n    </Container>\r\n  );\r\n};","import { HashRouter as Router, Route } from \"react-router-dom\";\nimport Details from \"../routes/Details\";\nimport Home from \"../routes/Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/:id\" component={Details} />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport client from \"./apollo\";\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  \r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}